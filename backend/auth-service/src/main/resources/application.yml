spring:
  application:
    name: auth-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/studentbnb}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
  
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

server:
  port: ${PORT:8081}
  servlet:
    context-path: /
  error:
    include-stacktrace: never
    include-message: always

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789mySecretKey123456789}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  health:
    db:
      enabled: true

# Logging Configuration
logging:
  level:
    com.studentbnb.auth: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5433/studentbnb}
    username: ${DATABASE_USERNAME:dev}
    password: ${DATABASE_PASSWORD:devpass123}
  
  jpa:
    hibernate:
    ddl-auto: update
    show-sql: true

server:
  port: ${PORT:8081}

logging:
  level:
    com.studentbnb.auth: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  h2:
    console:
      enabled: true

jwt:
  secret: ${JWT_SECRET:mySecretKey123456789mySecretKey123456789}

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

server:
  port: ${PORT:8081}

logging:
  level:
    com.studentbnb.auth: INFO
    root: WARN
  file:
    name: logs/auth-service.log

management:
  endpoints:
    web:
      exposure:
        include: health,info

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  
  jpa:
    hibernate:
      ddl-auto: update

server:
  port: 8081

logging:
  level:
    com.studentbnb.auth: INFO